
#include<stdio.h>
#include<conio.h>
#include<stdlib.h>
#include<malloc.h>

struct node{
    int data;
    struct node *next;
}*top,*q;


void push();
void pop();
void display();
void peek();

void main(){
    top=NULL;
    int ch;
    while(1){
        printf("\n1.Push 2.Pop 3.Display 4.Peek 5.Exit");
        printf("\nEnter the operation you want to perform: ");
        scanf("%d",&ch);

        switch(ch){
            case 1:
            push();
            break;

            case 2:
            pop();
            break;

            case 3:
            display();
            break;

            case 4:
            peek();
            break;

            case 5:
            exit(0);
            break;

            default:
            printf("\nSelect a valid operation");
        }
    }
}

void push(){
    q=(struct node*)malloc(sizeof(struct node));
    int x;
    printf("\nEnter the element you want to insert: ");
    scanf("%d",&x);
    q->data=x;
    q->next=NULL;

    if(top==NULL){
        top=q;
    }
    else{
        q->next=top;
        top=q;
    }
    printf("\nElement inserted");
}

void pop(){
    if(top==NULL){
        printf("\nStack is empty...");
    }
    else{
        q=top;
        top=top->next;
        q->next=NULL;
        free(q);
        printf("\nElement popped from the stack");
    }
}

void display(){
    if(top==NULL){
        printf("\nStack is empty...");
    }
    else{
        q=top;
        printf("\nElements of the stack are: ");
        while(q!=NULL){
            printf("\n%d",q->data);
            q=q->next;
        }
    }
}

void peek(){
    if(top==NULL){
        printf("\nStack is empty...");
    }
    else{
        q=top;
        printf("\nThe topmost element of the stack is: %d",q->data);
    }
}
